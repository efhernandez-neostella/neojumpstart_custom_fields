{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "CustomListGetLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/apptemplatecustomendpoints-dev-CustomListGet"
      }
    },
    "CustomDetailsGetLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/apptemplatecustomendpoints-dev-CustomDetailsGet"
      }
    },
    "CustomObjectPostLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/apptemplatecustomendpoints-dev-CustomObjectPost"
      }
    },
    "CustomObjectPutLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/apptemplatecustomendpoints-dev-CustomObjectPut"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "apptemplatecustomendpoints",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/apptemplatecustomendpoints-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/apptemplatecustomendpoints-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Resource": "*",
                  "Action": [
                    "sqs:SendMessage",
                    "lambda:InvokeFunction",
                    "lambda:InvokeAsync",
                    "lambda:GetFunction",
                    "dynamodb:PartiQLSelect"
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "apptemplatecustomendpoints",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AmazonRDSDataFullAccess",
          "arn:aws:iam::aws:policy/AmazonCognitoPowerUser",
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          "arn:aws:iam::aws:policy/SecretsManagerReadWrite",
          "arn:aws:iam::aws:policy/AmazonS3FullAccess",
          "arn:aws:iam::aws:policy/IAMFullAccess",
          "arn:aws:iam::aws:policy/AmazonSNSFullAccess",
          "arn:aws:iam::aws:policy/AmazonRoute53FullAccess",
          "arn:aws:iam::aws:policy/AmazonRDSFullAccess",
          "arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator"
        ]
      }
    },
    "CoreUtilsLambdaLayer": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": "apptemplate-dev-artifacts-s3bucket",
          "S3Key": "serverless/apptemplatecustomendpoints/dev/1704380245541-2024-01-04T14:57:25.541Z/./../../CoreUtils.zip"
        },
        "LayerName": "apptemplatecustomendpoints-dev-core-utils"
      }
    },
    "SqlHandlerLambdaLayer": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": "apptemplate-dev-artifacts-s3bucket",
          "S3Key": "serverless/apptemplatecustomendpoints/dev/1704380245541-2024-01-04T14:57:25.541Z/./../../SqlHandler.zip"
        },
        "LayerName": "apptemplatecustomendpoints-dev-sql-handler"
      }
    },
    "UtilsLambdaLayer": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": "apptemplate-dev-artifacts-s3bucket",
          "S3Key": "serverless/apptemplatecustomendpoints/dev/1704380245541-2024-01-04T14:57:25.541Z/./../../Utils.zip"
        },
        "LayerName": "apptemplatecustomendpoints-dev-utils"
      }
    },
    "PythonRequirementsLambdaLayer": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": "apptemplate-dev-artifacts-s3bucket",
          "S3Key": "serverless/apptemplatecustomendpoints/dev/1704380245541-2024-01-04T14:57:25.541Z/pythonRequirements.zip"
        },
        "LayerName": "apptemplatecustomendpoints-dev-python-libraries",
        "Description": "Layer containing the python libraries necessary for project apptemplatecustomendpoints",
        "CompatibleRuntimes": [
          "python3.8"
        ]
      }
    },
    "CustomListGetLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "apptemplate-dev-artifacts-s3bucket",
          "S3Key": "serverless/apptemplatecustomendpoints/dev/1704380245541-2024-01-04T14:57:25.541Z/CustomListGet.zip"
        },
        "Handler": "controllers/CustomListGet.lambda_handler",
        "Runtime": "python3.8",
        "FunctionName": "apptemplatecustomendpoints-dev-CustomListGet",
        "MemorySize": 1024,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "SERVICE_NAME": "apptemplatecustomendpoints-dev",
            "PROFILE": "AppTemplate",
            "RESOURCE_METHOD": "CustomListGet",
            "REGION_NAME": "us-east-2",
            "STAGE": "dev",
            "REST_API_ID": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
            },
            "FIELDS_TABLE": {
              "Fn::ImportValue": "apptemplatecustomfields-dev-CustomFields"
            },
            "DATABASE_NAME": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-DatabaseName"
            },
            "DB_CLUSTER_ARN": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-DbClusterARN"
            },
            "CORALOGIX_SECRET": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-CoralogixSecret"
            },
            "DB_CREDENTIALS_SECRETS_STORE_ARN": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-DbCredentialsSecretsStoreARN"
            },
            "APPKEY_SECRET_ARN": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-AppKeySecretARN"
            },
            "SNS_ARN": {
              "Fn::ImportValue": "apptemplateeventsinfra-dev-snsARN"
            },
            "WEBHOOK_LOGS_TABLE": {
              "Fn::ImportValue": "apptemplateeventsinfra-dev-WebhookLogsTable"
            },
            "AUDIT_LOGS_TABLE": {
              "Fn::ImportValue": "apptemplateeventsinfra-dev-AuditLogsTable"
            },
            "GATEWAY_AUTHORIZER_ID": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-GatewayAuthorizerId"
            },
            "TENANTS_BUCKET": "apptemplatecoreinfra-dev-tenants"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "PythonRequirementsLambdaLayer"
          },
          {
            "Ref": "CoreUtilsLambdaLayer"
          },
          {
            "Ref": "SqlHandlerLambdaLayer"
          },
          {
            "Ref": "UtilsLambdaLayer"
          }
        ]
      },
      "DependsOn": [
        "CustomListGetLogGroup"
      ]
    },
    "CustomDetailsGetLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "apptemplate-dev-artifacts-s3bucket",
          "S3Key": "serverless/apptemplatecustomendpoints/dev/1704380245541-2024-01-04T14:57:25.541Z/CustomDetailsGet.zip"
        },
        "Handler": "controllers/CustomDetailsGet.lambda_handler",
        "Runtime": "python3.8",
        "FunctionName": "apptemplatecustomendpoints-dev-CustomDetailsGet",
        "MemorySize": 1024,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "SERVICE_NAME": "apptemplatecustomendpoints-dev",
            "PROFILE": "AppTemplate",
            "RESOURCE_METHOD": "CustomDetailsGet",
            "REGION_NAME": "us-east-2",
            "STAGE": "dev",
            "REST_API_ID": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
            },
            "FIELDS_TABLE": {
              "Fn::ImportValue": "apptemplatecustomfields-dev-CustomFields"
            },
            "DATABASE_NAME": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-DatabaseName"
            },
            "DB_CLUSTER_ARN": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-DbClusterARN"
            },
            "CORALOGIX_SECRET": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-CoralogixSecret"
            },
            "DB_CREDENTIALS_SECRETS_STORE_ARN": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-DbCredentialsSecretsStoreARN"
            },
            "APPKEY_SECRET_ARN": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-AppKeySecretARN"
            },
            "SNS_ARN": {
              "Fn::ImportValue": "apptemplateeventsinfra-dev-snsARN"
            },
            "WEBHOOK_LOGS_TABLE": {
              "Fn::ImportValue": "apptemplateeventsinfra-dev-WebhookLogsTable"
            },
            "AUDIT_LOGS_TABLE": {
              "Fn::ImportValue": "apptemplateeventsinfra-dev-AuditLogsTable"
            },
            "GATEWAY_AUTHORIZER_ID": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-GatewayAuthorizerId"
            },
            "TENANTS_BUCKET": "apptemplatecoreinfra-dev-tenants"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "PythonRequirementsLambdaLayer"
          },
          {
            "Ref": "CoreUtilsLambdaLayer"
          },
          {
            "Ref": "SqlHandlerLambdaLayer"
          },
          {
            "Ref": "UtilsLambdaLayer"
          }
        ]
      },
      "DependsOn": [
        "CustomDetailsGetLogGroup"
      ]
    },
    "CustomObjectPostLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "apptemplate-dev-artifacts-s3bucket",
          "S3Key": "serverless/apptemplatecustomendpoints/dev/1704380245541-2024-01-04T14:57:25.541Z/CustomObjectPost.zip"
        },
        "Handler": "controllers/CustomObjectPost.lambda_handler",
        "Runtime": "python3.8",
        "FunctionName": "apptemplatecustomendpoints-dev-CustomObjectPost",
        "MemorySize": 1024,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "SERVICE_NAME": "apptemplatecustomendpoints-dev",
            "PROFILE": "AppTemplate",
            "RESOURCE_METHOD": "CustomObjectPost",
            "REGION_NAME": "us-east-2",
            "STAGE": "dev",
            "REST_API_ID": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
            },
            "FIELDS_TABLE": {
              "Fn::ImportValue": "apptemplatecustomfields-dev-CustomFields"
            },
            "DATABASE_NAME": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-DatabaseName"
            },
            "DB_CLUSTER_ARN": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-DbClusterARN"
            },
            "CORALOGIX_SECRET": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-CoralogixSecret"
            },
            "DB_CREDENTIALS_SECRETS_STORE_ARN": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-DbCredentialsSecretsStoreARN"
            },
            "APPKEY_SECRET_ARN": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-AppKeySecretARN"
            },
            "SNS_ARN": {
              "Fn::ImportValue": "apptemplateeventsinfra-dev-snsARN"
            },
            "WEBHOOK_LOGS_TABLE": {
              "Fn::ImportValue": "apptemplateeventsinfra-dev-WebhookLogsTable"
            },
            "AUDIT_LOGS_TABLE": {
              "Fn::ImportValue": "apptemplateeventsinfra-dev-AuditLogsTable"
            },
            "GATEWAY_AUTHORIZER_ID": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-GatewayAuthorizerId"
            },
            "TENANTS_BUCKET": "apptemplatecoreinfra-dev-tenants"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "PythonRequirementsLambdaLayer"
          },
          {
            "Ref": "CoreUtilsLambdaLayer"
          },
          {
            "Ref": "SqlHandlerLambdaLayer"
          },
          {
            "Ref": "UtilsLambdaLayer"
          }
        ]
      },
      "DependsOn": [
        "CustomObjectPostLogGroup"
      ]
    },
    "CustomObjectPutLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "apptemplate-dev-artifacts-s3bucket",
          "S3Key": "serverless/apptemplatecustomendpoints/dev/1704380245541-2024-01-04T14:57:25.541Z/CustomObjectPut.zip"
        },
        "Handler": "controllers/CustomObjectPut.lambda_handler",
        "Runtime": "python3.8",
        "FunctionName": "apptemplatecustomendpoints-dev-CustomObjectPut",
        "MemorySize": 1024,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "SERVICE_NAME": "apptemplatecustomendpoints-dev",
            "PROFILE": "AppTemplate",
            "RESOURCE_METHOD": "CustomObjectPut",
            "REGION_NAME": "us-east-2",
            "STAGE": "dev",
            "REST_API_ID": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
            },
            "FIELDS_TABLE": {
              "Fn::ImportValue": "apptemplatecustomfields-dev-CustomFields"
            },
            "DATABASE_NAME": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-DatabaseName"
            },
            "DB_CLUSTER_ARN": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-DbClusterARN"
            },
            "CORALOGIX_SECRET": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-CoralogixSecret"
            },
            "DB_CREDENTIALS_SECRETS_STORE_ARN": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-DbCredentialsSecretsStoreARN"
            },
            "APPKEY_SECRET_ARN": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-AppKeySecretARN"
            },
            "SNS_ARN": {
              "Fn::ImportValue": "apptemplateeventsinfra-dev-snsARN"
            },
            "WEBHOOK_LOGS_TABLE": {
              "Fn::ImportValue": "apptemplateeventsinfra-dev-WebhookLogsTable"
            },
            "AUDIT_LOGS_TABLE": {
              "Fn::ImportValue": "apptemplateeventsinfra-dev-AuditLogsTable"
            },
            "GATEWAY_AUTHORIZER_ID": {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-GatewayAuthorizerId"
            },
            "TENANTS_BUCKET": "apptemplatecoreinfra-dev-tenants"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "PythonRequirementsLambdaLayer"
          },
          {
            "Ref": "CoreUtilsLambdaLayer"
          },
          {
            "Ref": "SqlHandlerLambdaLayer"
          },
          {
            "Ref": "UtilsLambdaLayer"
          }
        ]
      },
      "DependsOn": [
        "CustomObjectPutLogGroup"
      ]
    },
    "CustomObjectPostLambdaVersion7Z1utZFc4LJr1pzxHKyEkG9iWpwtf2oajgEXJ7oQ": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CustomObjectPostLambdaFunction"
        },
        "CodeSha256": "BdXq9GVZhwQIUyMeIbTBybQUYuw4D0ihU8PSYrWIdAI="
      }
    },
    "CustomObjectPutLambdaVersionRXq95uiuchcRwsB5LLtMdpBPGEag3r0iWy131d2cebI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CustomObjectPutLambdaFunction"
        },
        "CodeSha256": "BdXq9GVZhwQIUyMeIbTBybQUYuw4D0ihU8PSYrWIdAI="
      }
    },
    "CustomDetailsGetLambdaVersionV5Kgtqau1fumKv9O5fsOoJ1kwma5lvZUXctltsaNtY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CustomDetailsGetLambdaFunction"
        },
        "CodeSha256": "BdXq9GVZhwQIUyMeIbTBybQUYuw4D0ihU8PSYrWIdAI="
      }
    },
    "CustomListGetLambdaVersionDAmwka4z7vsXO61o4hrBZbz9nexe9tZecZYCktiipA": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CustomListGetLambdaFunction"
        },
        "CodeSha256": "BdXq9GVZhwQIUyMeIbTBybQUYuw4D0ihU8PSYrWIdAI="
      }
    },
    "ApiGatewayResourceCustom": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiRootResourceId"
        },
        "PathPart": "custom",
        "RestApiId": {
          "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
        }
      }
    },
    "ApiGatewayResourceCustomEntitynameVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceCustom"
        },
        "PathPart": "{entity_name}",
        "RestApiId": {
          "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
        }
      }
    },
    "ApiGatewayResourceCustomEntitynameVarIdVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceCustomEntitynameVar"
        },
        "PathPart": "{id}",
        "RestApiId": {
          "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
        }
      }
    },
    "ApiGatewayMethodCustomEntitynameVarOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceCustomEntitynameVar"
        },
        "RestApiId": {
          "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
        }
      }
    },
    "ApiGatewayMethodCustomEntitynameVarIdVarOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT,GET'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceCustomEntitynameVarIdVar"
        },
        "RestApiId": {
          "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
        }
      }
    },
    "ApiGatewayMethodCustomEntitynameVarGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {
          "method.request.header.Authorization": "true",
          "method.request.header.Content-Type": "true",
          "method.request.header.App-Key": "false",
          "method.request.header.Tenant-Key": "false",
          "method.request.header.tenant_id": "false",
          "method.request.header.version": "false",
          "method.request.querystring.is_active": false
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceCustomEntitynameVar"
        },
        "RestApiId": {
          "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Fn::ImportValue": "apptemplatecoreinfra-dev-ApiGatewayAuthorizer"
        },
        "AuthorizationScopes": [
          "aws.cognito.signin.user.admin",
          "apiauthidentifier/json.read"
        ],
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CustomListGetLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseModels": {
              "application/json": "CustomListGetResponse"
            }
          }
        ]
      },
      "DependsOn": [
        "CustomListGetResponseModel"
      ]
    },
    "ApiGatewayMethodCustomEntitynameVarIdVarGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {
          "method.request.header.Authorization": "true",
          "method.request.header.Content-Type": "true",
          "method.request.header.App-Key": "false",
          "method.request.header.Tenant-Key": "false",
          "method.request.header.tenant_id": "false",
          "method.request.header.version": "false"
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceCustomEntitynameVarIdVar"
        },
        "RestApiId": {
          "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Fn::ImportValue": "apptemplatecoreinfra-dev-ApiGatewayAuthorizer"
        },
        "AuthorizationScopes": [
          "aws.cognito.signin.user.admin",
          "apiauthidentifier/json.read"
        ],
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CustomDetailsGetLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseModels": {
              "application/json": "CustomDetailsGetResponse"
            }
          }
        ]
      },
      "DependsOn": [
        "CustomDetailsGetResponseModel"
      ]
    },
    "ApiGatewayMethodCustomEntitynameVarPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceCustomEntitynameVar"
        },
        "RestApiId": {
          "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Fn::ImportValue": "apptemplatecoreinfra-dev-ApiGatewayAuthorizer"
        },
        "AuthorizationScopes": [
          "aws.cognito.signin.user.admin",
          "apiauthidentifier/json.read"
        ],
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CustomObjectPostLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "CustomObjectPostLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodCustomEntitynameVarIdVarPut": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceCustomEntitynameVarIdVar"
        },
        "RestApiId": {
          "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Fn::ImportValue": "apptemplatecoreinfra-dev-ApiGatewayAuthorizer"
        },
        "AuthorizationScopes": [
          "aws.cognito.signin.user.admin",
          "apiauthidentifier/json.read"
        ],
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CustomObjectPutLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "CustomObjectPutLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayDeployment1704380222744": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodCustomEntitynameVarOptions",
        "ApiGatewayMethodCustomEntitynameVarIdVarOptions",
        "ApiGatewayMethodCustomEntitynameVarGet",
        "ApiGatewayMethodCustomEntitynameVarIdVarGet",
        "ApiGatewayMethodCustomEntitynameVarPost",
        "ApiGatewayMethodCustomEntitynameVarIdVarPut"
      ]
    },
    "CustomListGetLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CustomListGetLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "CustomDetailsGetLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CustomDetailsGetLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "CustomObjectPostLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CustomObjectPostLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "CustomObjectPutLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CustomObjectPutLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "CustomListGetResponseModel": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
        },
        "ContentType": "application/json",
        "Name": "CustomListGetResponse",
        "Schema": {
          "type": "object",
          "properties": {
            "objects": {
              "type": "array",
              "description": "Array of objects",
              "items": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "CustomDetailsGetResponseModel": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
        },
        "ContentType": "application/json",
        "Name": "CustomDetailsGetResponse",
        "Schema": {
          "type": "object",
          "properties": {
            "items": {
              "type": "object",
              "properties": {}
            }
          }
        }
      }
    },
    "CustomObjectPostResponseModel": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
        },
        "ContentType": "application/json",
        "Name": "CustomObjectPostResponse",
        "Schema": {
          "type": "object",
          "properties": {
            "correlation_id": {
              "type": "string",
              "description": "UUID of the process"
            },
            "result": {
              "type": "string",
              "description": "Result message"
            },
            "{primary key}": {
              "type": "string",
              "description": "Id of the record created"
            }
          }
        }
      }
    },
    "CustomObjectPutResponseModel": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
        },
        "ContentType": "application/json",
        "Name": "CustomObjectPutResponse",
        "Schema": {
          "type": "object",
          "properties": {
            "correlation_id": {
              "type": "string",
              "description": "UUID of the process"
            },
            "result": {
              "type": "string",
              "description": "Result message"
            },
            "{primary key}": {
              "type": "string",
              "description": "Id of the record updated"
            }
          }
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "apptemplate-dev-artifacts-s3bucket",
      "Export": {
        "Name": "sls-apptemplatecustomendpoints-dev-ServerlessDeploymentBucketName"
      }
    },
    "CoreUtilsLambdaLayerQualifiedArn": {
      "Description": "Current Lambda layer version",
      "Value": {
        "Ref": "CoreUtilsLambdaLayer"
      },
      "Export": {
        "Name": "sls-apptemplatecustomendpoints-dev-CoreUtilsLambdaLayerQualifiedArn"
      }
    },
    "CoreUtilsLambdaLayerHash": {
      "Description": "Current Lambda layer hash",
      "Value": "ae766cd0fd1bbe1a5b676bc240d71bed880a385a",
      "Export": {
        "Name": "sls-apptemplatecustomendpoints-dev-CoreUtilsLambdaLayerHash"
      }
    },
    "CoreUtilsLambdaLayerS3Key": {
      "Description": "Current Lambda layer S3Key",
      "Value": "serverless/apptemplatecustomendpoints/dev/1704380245541-2024-01-04T14:57:25.541Z/./../../CoreUtils.zip",
      "Export": {
        "Name": "sls-apptemplatecustomendpoints-dev-CoreUtilsLambdaLayerS3Key"
      }
    },
    "SqlHandlerLambdaLayerQualifiedArn": {
      "Description": "Current Lambda layer version",
      "Value": {
        "Ref": "SqlHandlerLambdaLayer"
      },
      "Export": {
        "Name": "sls-apptemplatecustomendpoints-dev-SqlHandlerLambdaLayerQualifiedArn"
      }
    },
    "SqlHandlerLambdaLayerHash": {
      "Description": "Current Lambda layer hash",
      "Value": "ce979d81fd14f52442da64f0dbd78c42e767ccb0",
      "Export": {
        "Name": "sls-apptemplatecustomendpoints-dev-SqlHandlerLambdaLayerHash"
      }
    },
    "SqlHandlerLambdaLayerS3Key": {
      "Description": "Current Lambda layer S3Key",
      "Value": "serverless/apptemplatecustomendpoints/dev/1704380245541-2024-01-04T14:57:25.541Z/./../../SqlHandler.zip",
      "Export": {
        "Name": "sls-apptemplatecustomendpoints-dev-SqlHandlerLambdaLayerS3Key"
      }
    },
    "UtilsLambdaLayerQualifiedArn": {
      "Description": "Current Lambda layer version",
      "Value": {
        "Ref": "UtilsLambdaLayer"
      },
      "Export": {
        "Name": "sls-apptemplatecustomendpoints-dev-UtilsLambdaLayerQualifiedArn"
      }
    },
    "UtilsLambdaLayerHash": {
      "Description": "Current Lambda layer hash",
      "Value": "070230d8a4658890c91bcd5acc92a2eab8432d0c",
      "Export": {
        "Name": "sls-apptemplatecustomendpoints-dev-UtilsLambdaLayerHash"
      }
    },
    "UtilsLambdaLayerS3Key": {
      "Description": "Current Lambda layer S3Key",
      "Value": "serverless/apptemplatecustomendpoints/dev/1704380245541-2024-01-04T14:57:25.541Z/./../../Utils.zip",
      "Export": {
        "Name": "sls-apptemplatecustomendpoints-dev-UtilsLambdaLayerS3Key"
      }
    },
    "PythonRequirementsLambdaLayerQualifiedArn": {
      "Description": "Current Lambda layer version",
      "Value": {
        "Ref": "PythonRequirementsLambdaLayer"
      },
      "Export": {
        "Name": "sls-apptemplatecustomendpoints-dev-PythonRequirementsLambdaLayerQualifiedArn"
      }
    },
    "PythonRequirementsLambdaLayerHash": {
      "Description": "Current Lambda layer hash",
      "Value": "8634d59584fda52490c910bcd6baea43d73f63e7",
      "Export": {
        "Name": "sls-apptemplatecustomendpoints-dev-PythonRequirementsLambdaLayerHash"
      }
    },
    "PythonRequirementsLambdaLayerS3Key": {
      "Description": "Current Lambda layer S3Key",
      "Value": "serverless/apptemplatecustomendpoints/dev/1704380245541-2024-01-04T14:57:25.541Z/pythonRequirements.zip",
      "Export": {
        "Name": "sls-apptemplatecustomendpoints-dev-PythonRequirementsLambdaLayerS3Key"
      }
    },
    "CustomObjectPostLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CustomObjectPostLambdaVersion7Z1utZFc4LJr1pzxHKyEkG9iWpwtf2oajgEXJ7oQ"
      },
      "Export": {
        "Name": "sls-apptemplatecustomendpoints-dev-CustomObjectPostLambdaFunctionQualifiedArn"
      }
    },
    "CustomObjectPutLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CustomObjectPutLambdaVersionRXq95uiuchcRwsB5LLtMdpBPGEag3r0iWy131d2cebI"
      },
      "Export": {
        "Name": "sls-apptemplatecustomendpoints-dev-CustomObjectPutLambdaFunctionQualifiedArn"
      }
    },
    "CustomDetailsGetLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CustomDetailsGetLambdaVersionV5Kgtqau1fumKv9O5fsOoJ1kwma5lvZUXctltsaNtY"
      },
      "Export": {
        "Name": "sls-apptemplatecustomendpoints-dev-CustomDetailsGetLambdaFunctionQualifiedArn"
      }
    },
    "CustomListGetLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CustomListGetLambdaVersionDAmwka4z7vsXO61o4hrBZbz9nexe9tZecZYCktiipA"
      },
      "Export": {
        "Name": "sls-apptemplatecustomendpoints-dev-CustomListGetLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-apptemplatecustomendpoints-dev-ServiceEndpoint"
      }
    },
    "AwsDocApiId": {
      "Description": "API ID",
      "Value": {
        "Fn::ImportValue": "apptemplatecoreinfra-dev-ExtApiGatewayRestApiId"
      },
      "Export": {
        "Name": "sls-apptemplatecustomendpoints-dev-AwsDocApiId"
      }
    }
  }
}